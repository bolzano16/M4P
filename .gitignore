// this constant won't change:
const int  buttonPin = 2;
const int  buttonPin1 = 3;
const int  buttonPin2 = 4;
const int  buttonPin3 = 5;// the pin that the pushbutton is attached to
const int ledPin = 13;       // the pin that the LED is attached to

// Variables will change:
int tiempo = 0;
int buttonPushCounter = 0;   // counter for the number of button presses
int buttonState = 0;         // current state of the button
int lastButtonState = 0;     // previous state of the button
int buttonPushCounter1 = 0;   // counter for the number of button presses
int buttonState1 = 0;         // current state of the button
int lastButtonState1 = 0;  
int buttonPushCounter2 = 0;   // counter for the number of button presses
int buttonState2 = 0;         // current state of the button
int lastButtonState2 = 0;  
int buttonPushCounter3 = 0;   // counter for the number of button presses
int buttonState3 = 0;         // current state of the button
int lastButtonState3 = 0;  
void setup() {
  // initialize the button pin as a input:
  pinMode(buttonPin, INPUT);
  pinMode(buttonPin1, INPUT);
  pinMode(buttonPin2, INPUT);
  pinMode(buttonPin3, INPUT);
  // initialize the LED as an output:
  pinMode(ledPin, OUTPUT);
  // initialize serial communication:
  Serial.begin(9600);
}


void loop() {
  // read the pushbutton input pin:
  buttonState = digitalRead(buttonPin);
 buttonState1 = digitalRead(buttonPin1);
  buttonState2 = digitalRead(buttonPin2);
   buttonState3 = digitalRead(buttonPin3);// compare the buttonState to its previous state
  if (buttonState != lastButtonState) {
    // if the state has changed, increment the counter
    if (buttonState == HIGH) {
      // if the current state is HIGH then the button
      // wend from off to on:
      buttonPushCounter++;
      delay (20);
      tiempo++;
          
      Serial.print("L4_BO_08_03_15_E_");
      Serial.println(buttonPushCounter);
      tiempo=0;
    }} 
    if (buttonState1 != lastButtonState1) {
    // if the state has changed, increment the counter
    if (buttonState1 == HIGH) {
      // if the current state is HIGH then the button
      // wend from off to on:
      buttonPushCounter1++;
      delay (20);
      tiempo++;
          
      Serial.print("L4_JA_08_03_15_S_");
      Serial.println(buttonPushCounter1);
      tiempo=0;
    } 
    if (buttonState2 != lastButtonState2) {
    // if the state has changed, increment the counter
    if (buttonState2 == HIGH) {
      // if the current state is HIGH then the button
      // wend from off to on:
      buttonPushCounter2++;
      delay (20);
      tiempo+
          
      Serial.print("L4_JA_08_03_15_E_");
      Serial.println(buttonPushCounter2);
      tiempo=0;
    }} 
    if (buttonState3 != lastButtonState3) {
    // if the state has changed, increment the counter
    if (buttonState3 == HIGH) {
      // if the current state is HIGH then the button
      // wend from off to on:
      buttonPushCounter3++;
      delay (20);
      tiempo++;
          
      Serial.print("L4_BO_08_03_15_S_");
      Serial.println(buttonPushCounter3);
      tiempo=0;
    }} 
    else {
      // if the current state is LOW then the button
      // wend from on to off:
       
    }
  }
  // save the current state as the last state, 
  //for next time through the loop
  lastButtonState = buttonState;

  lastButtonState1 = buttonState1;
  lastButtonState2 = buttonState2;
  lastButtonState3 = buttonState3;
  
  // turns on the LED every four button pushes by 
  // checking the modulo of the button push counter.
  // the modulo function gives you the remainder of 
  // the division of two numbers:
  if (buttonPushCounter % 4 == 0) {
    digitalWrite(ledPin, HIGH);
  } else {
   digitalWrite(ledPin, LOW);
  }
  
}
